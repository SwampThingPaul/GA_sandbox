name: Render R Markdown (Windows) - test

on:
  push:
    branches: [master]
  workflow_dispatch:
  # schedule:
    # - cron: '15,30,45 * * * *'

permissions:
  contents: write

jobs:
  render:
    runs-on: windows-latest
    env:
      R_LIBS_USER: ${{ github.workspace }}/.Rlibrary
      PERSONAL_PAT: ${{ secrets.GH_PAT }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
          r-version: '4.2.0' 

    - name: Set up Pandoc
      uses: r-lib/actions/setup-pandoc@v2

    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ hashFiles('**/*.R', '**/*.Rmd') }}
        restore-keys: |
           ${{ runner.os }}-R-
            
    - name: Install packages
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        pak-version: "devel"
        packages: |
          rmarkdown
          knitr
          reshape2
          plyr
          dataRetrieval
          downloadthis
          rvest
          SwampThingPaul/AnalystHelper
          SwampThingPaul/EVERSpatDat
          remotes

    - name: Install terra and raster from rspatial
      shell: Rscript {0}
      run: |
        install.packages('sf', type = "binary")
        install.packages('terra', repos = c('https://rspatial.r-universe.dev', 'https://cloud.r-project.org'))
        install.packages('raster', repos = c('https://rspatial.r-universe.dev', 'https://cloud.r-project.org'))
        
    - name: Render R Markdown
      run: Rscript -e 'rmarkdown::render("./test_report.Rmd", output_format = "html_document")'

    - name: Configure Git
      run: |
          git config user.name "SwampThingPaul"
          git config user.email "<>"
#         git config --global user.name "github-actions"
#         git config --global user.email "github-actions@github.com"

    - name: Commit and push rendered report
      run: |
        git add test_report.Rmd test_report.html 
        git commit -m 'update report' || echo "No changes to commit"
        git pull --ff-only
        git push origin || echo "No changes to commit"
